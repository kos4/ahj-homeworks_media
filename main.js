(()=>{"use strict";class t{constructor(t){this.container=t}init(){this.container.insertAdjacentHTML("beforeend",t.markup())}static markup(){return'\n      <section class="line">\n        <div class="container">\n          <div class="line__list"></div>\n          <div class="line__form"></div>\n        </div>\n      </section>\n    '}}class e{constructor(t){this.container=t}init(t){this.bindToDom(t)}bindToDom(t){this.renderList(t)}renderList(t){t.forEach((t=>{this.container.insertAdjacentHTML("beforeend",e.markup(t))}))}static renderPost(t){document.querySelector(".line__list").insertAdjacentHTML("beforeend",e.markup(t))}static markup(t){return`\n      <div class="line__item">\n        <div class="line__item-date">\n          ${new Date(t.date).toLocaleDateString(void 0,{year:"numeric",month:"2-digit",day:"2-digit",hour:"2-digit",minute:"2-digit"})}\n        </div>\n        <div class="line__item-message">${t.message}</div>\n        <div class="line__item-coordinate">[${t.coordinate.lat}, ${t.coordinate.long}]</div>\n      </div>\n    `}}class n{constructor(){const t=JSON.parse(localStorage.getItem("data"));this.data=Array.isArray(t)?t:[]}get posts(){return this.data}savePost(t,n){const{message:o}=t;if(!o.value)return;const r={date:Date.now(),message:o.value,coordinate:n};this.data.push(r),localStorage.setItem("data",JSON.stringify(this.data)),e.renderPost(r),o.value=""}}class o{constructor(){this.container=document.querySelector("body")}render(t){const e=o.markup();o.remove(),this.container.insertAdjacentHTML("beforeend",e);document.querySelector(".form__btn-close").addEventListener("click",o.close);document.querySelector(".formCoordinate").addEventListener("submit",o.onSubmit.bind(this,t))}static onSubmit(t,e){e.preventDefault();const r=e.target,i=function(t){if(!t||!/^\[?-?\d+\.?\d*,\s?-?\d+\.?\d*]?$/.test(t))return!1;let e=t.replace(/[^\d.,-]/gi,"");return e=e.split(","),{lat:e[0],long:e[1]}}(r.coordinate.value);if(i){r.coordinate.style.border="1px solid green",o.remove();(new n).savePost(t,i)}else r.coordinate.style.border="1px solid red"}static close(){o.remove()}static remove(){const t=document.querySelectorAll(".popup");t.length&&t.forEach((t=>{t.parentNode.removeChild(t)}))}static markup(){return'\n      <div class="popup">\n        <div class="popup__window">\n          <div class="popup__title">Что то пошло не так</div>\n          <div class="popup__body">\n            <p>К сожалению, нам не удалось определить ваше местоположение, пожалуйста, дайте разрешение на использование геолокации, либо введите координаты в ручную.</p>\n            <form class="form formCoordinate">\n              <div class="form__group">\n                <label for="coordinate"></label>\n                <input class="form__text" name="coordinate" id="coordinate">\n              </div>\n              <div class="form__group form__buttons">\n                <button class="form__btn form__btn-close" type="button">Отмена</button>\n                <button class="form__btn">Ок</button>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    '}}class r{constructor(){if(!navigator.geolocation)throw new Error("Нет модуля геолокации.")}getCoordinate(t){navigator.geolocation.getCurrentPosition(r.onCoordinateSuccess.bind(this,t),r.onCoordinateError.bind(this,t),{enableHighAccuracy:!0})}static onCoordinateSuccess(t,e){const{latitude:o,longitude:r}=e.coords;(new n).savePost(t,{lat:o,long:r})}static onCoordinateError(t){(new o).render(t)}}class i{constructor(t){this.container=t}init(){this.bindToDom()}bindToDom(){this.container.insertAdjacentHTML("beforeend",i.markup());document.querySelector(".form").addEventListener("submit",i.onSubmit)}static onSubmit(t){t.preventDefault();const e=t.target;(new r).getCoordinate(e)}static markup(){return'\n      <form class="form">\n        <div class="form__group">\n          <label for="message"></label>\n          <input class="form__text" name="message" id="message">\n        </div>\n      </form>\n    '}}const s=document.querySelector("body");new t(s).init();const a=document.querySelector(".line__form");new i(a).init();const c=document.querySelector(".line__list"),d=new e(c),l=new n,{posts:u}=l;d.init(u)})();